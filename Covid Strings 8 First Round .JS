doc. type. html
script
html 
head
utf eight
viewport content=width=device-width, initial-scale=one>
title covid strings eight bracket 
style
head
body
bracket
matchup
solid zero
filename=covid strings eight first round .js
first round=(highest overall seed ,second highest seed third highest seed first middle seed, second middle seed,  third lowest seed ,second lowest seed,lowest overall seed)
highest overall seed = 1 seed
second highest seed=2 seed
third highest seed=3 seed
firstmiddleseed=4seed
second middle seed = 5 seed
third lowest seed= 6 seed
second lowest seed = 7 seed
lowest overall seed = 8 seed
document.addeventlistener(domcontentloaded, () => {
bracket = document.getelementbyid(bracket);
teams=[blue,pink,red,magenta,orange,black,indigo]
create matchup(black versus red )
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML = <div>${team1}</div><div>${team2}</div>;
return matchup;
create matchup(indigo isos versus blue curve crushers)
matchup = document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML = <div>${team1}</div><div>${team2}</div>;
return matchup;
create matchup(orange versus magenta)
matchup =document.createelement(div);
matchup.classList.add(matchup);
matchup.innerHTML = <div>${team1}</div><div>${team2}</div>;
return matchup;
create matchup(teal versus pink)
matchup = document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML = <div>${team1}</div><div>${team2}</div>;
return matchup;
createround =covid strings eight first round
const round =document.createelement(div);
round.classlist.add(round);
for (let i = zero; i < teams.length; i += two) 
round.appendchild(creatematchup(teams[i],teams[i + one]));
return round;
bracket.appendchild(createround(teams));
matchup.innerHTML = <div class=team>${team1}</div><div class=team>${team2}</div>;
java util.scanner
java.util
questions[]questions={
collections.shuffle(arrays.aslist(questions)
question1
question2
question3
question4
question5
question6
question7
question8
question9
question10
question11
question12
question13
question14
question15
team.addeventlistener(click, () => {
team.classlist.toggle(selected)
advancingteams=(currentteams)
result=declarewinner(team1 score, team2 score)
if red score>=forty:
console.log(red protein spikers win)
else:
console.log(black night riders win)
result=declarewinner(team1 score, team2 score)
if blue score>=forty:
console.log(blue curve crushers win)
else
console.log(indigo isos win)
result=declarewinner(team1 score, team2 score)
if magenta score>=fourty:
console.log(magenta magnetizers win)
else:
console.log(orange rna messengers win)
result=declarewinner(team1 score, team2 score)
if pink score>fourty:
console.log(pink covid disease fighters win)
else:
console.log(teal terminators win)
return filename

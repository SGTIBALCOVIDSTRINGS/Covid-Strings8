doc.type html
html lang en
script
header=document create.element(header)
header.style.backgroundcolor=#4caf50
header.style.color=’white’
header.style.padding=’10px’
header.style.textalign=’center’
header.style.text.fontsize=’24px’
header.textcontent=’welcome to covid strings8’
document appendchild(header)
<header.html>
heading variables 
the heading numbers that determine where each heading and subheading go 
heading1=game code overview
heading2=background functions
heading3=game code part1
heading4=phrases
heading5=multiple choice questions
heading6=math problems
heading7=sentences
heading8=game code part2 
heading9=answer checker
heading10=winner checker
subheading1=polling problems
subheading2=bonus question
subheading3= answer scanner
this.img=document.createelement(covid)
img.src=http://www.google.com/intl/en_com/images/logo_plain.png
src=document getelementbyid(header)
src.appendchild(this.img)
filename=covid strings 8.js
<header.html>
game code overview
an outline of the game code for covid strings8
java.awt graphics 
<div id=header></div>
audio=new audio(audio_file mp3)
audio.play 
random button
new button (set random color)
option button
new button (change color)
public fun with graphics()
color panel=new jpannel();
add (panel,center )
button panel
new j panel (flowlayout.center)
buttonpanel.add(randombutton);
random.button add actionlistener(new action listener)
override 
public actionperformed(actionevent e)
random r= newrandom();
<header.html>
background functions
the functions that lead into the background that are the first things the user will experience
colorpanel.setbackground(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen)))(rnextint(thirteen))) (rnextint(thirteen))) (rnextint(thirteen))) (rnextint(thirteen)))))
num teams
total players= players per team
if players per team=zero
return zero
else 
return math floor total players/players per team
teamsgrouping=(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)
buttonpanel.add(optionbutton);
optionbutton.add actionlistener(new action listener)
override 
public actionperformed(actionevent e)
color m=jcolorchooser.showdialog(funwithgraphics.this)
if(multi!=null)
color panel set.background(multi)
this.add(buttonpanel, borderlayout.south)
public static main(string [] args)
jframe f = new covid strings 8()
f.set title(covid strings 8)
f.set default closeoperation(exit_on_close);
f.setsize
f.set visible(true);
<label id=lblscore>zero</label>
score=zero
if (mult == x*y)
[non-concatenated]
score+=ten
else:
score-=ten
if (mult == x*y)
[concatenated]
score+=twenty
else:
score-=twenty
lblscore=document.getelementbyid(lblscore)
lbl.score.inner html=score
private j button next button=new jbutton(next)
nextbutton add.actionlistener(this)
public actionperformed(action event e) 
system.out print.in (next button clicked)
frame.add(next button);
frame set visible true
object {a:one, b:two, c:three, d:four, e:five, f:six, g:seven, h:eight}
keys object keys(team)
entries object entries(obj);
value object=[team color]
<header.html>
game code part1
part1 of game code for covid strings8(value object[team-color]-desired color green)
covidstringsteamlisteight=[blue curve crushers,pink covid disease fighters,red protein spikers ,magenta magnetizers ,orange rna messengers ,black night riders,teal terminators,indigo isos]
string manager{non-concatenated}
insert string (entity,string)
entity.element.text=string
string manager insert string
string manager{concatenated}
insert string (entity,string)
entity.element.text=string
string manager insert string
string=””
for string in covid strings phrase list8 
select characters
edit diffuse property
desired color=green
for string in covid strings8 math problems list 
select characters
edit diffuse property
desired color=green
for string in covid strings sentence list8 
select characters
edit diffuse property
desired color=green
for string in covid strings8 bonus question
select characters
edit diffuse property
desired color=green
<header.html>
phrases
phrases that involve both non-concatenated and concatenated strings 
covidstringsphraselisteight= [non-concatenated strings ,"covid trackers can sometimes use peoples personal data against them"
"when using a covid tracker safety is one option"
"when it comes to the origins of covid knowledge is power"
"given the new flu-like virus things may change"
"the worst case scenario could happen"
"ba286 and hv and jn1 can also cause problems"
"mental health impacts can also change"
"you dont need web md to tell you covid fatigue is real"
concatenated strings
"if"+"you"+"do"+"have"+"it"+"sleep"+"and"+"relaxation"+"are"+"some"+"strategies"
"any+"covid"+"prescription"+"is"+"not"+"as"+"good"+"as"+"a"+"lexus"+"rx"
"at"+"least"+"it"+"would"+"make"+"you"+"feel"+"a"+"ok"
"it"+"would"+"also"+"be"+"better"+"than"+"ivermectin"+"or"+"dietary"+"supplements"
"you"+"can"+"include"+"colloidal"+"silver"+"too"
"uv"+"light"+"should"+"be"+"safely"+"eliminated"+"as"+"any"+"treatment"
"it"+"should"+"be"+"obvious"+"that"+"bleach"+"is"+"similarly"+"ineffective"
"bleach"+"can"+"be"+"used"+"if"+"it"+"is"+"disenfected"+"on"+"hard"+"surfaces"]
<header.html>
multiple choice questions 
multiple choice questions and answers that will appear in covid strings8
covidstringseightmultiplechoicelist=[1:a covid brsv cspanishflu dsanta, 2:a wisely b recklessly c safety d putting money under the bed, 3: a oranges b spread c origins d beginning, 4: a sleep b going back to the office c leaving out milk and cookies d working out, 5: a red solo cup b acura cdx c lexus rx d genesis g sixty,6:a the delta variant b hv and jn1 c donald trumps covid infection d state capture, 7: a mathematically b safely c totally d not at all, 8: a physical b mental c social D covid, 9: a rsv b flu c ebola d mythomagic, 10: a drained b disinfected c sprayed d twisted, 11: a web md b your doctor c donald trump d a mask bonfire, 12: a pyrite  b colloidal silver c anthracite coal d alex jones,13: a worst-case b one involving the russian people not caring about putin c no magic bullet d elites turning on putin,
14: a ivermectin b ozempic c narcolepsy d ringworm,15: a woozy b a ok c right at home d trumps mugshot, 16: a third party spoiler b way of barring trump from office c solution to help ukraine d taylor swift card,17:a pythagorean theorem b russias lie of not being behind the kakova dam explosion c trumps lies about a rigged election d putins luxury yacht, 18:a circulatory system b reproductive system c immune system d rem sleep,
19:a natural immunity b a hospital stay c to repeat grades d car accident, 20: a mildly b strongly c dont care d neutral,21:a yes b no]
covid strings eight math problemslist= [ non-concatenated"if a poll found that eighty percent of americans believe they get enough sleep to prevent the worst effects of covid how many arent sure"?,"if the margin of error is three and fourty four hundreths percent what is the range"?,"if ninety five percent of americans find the nine month effect to be somewhat exaggerated how many dont"?,"if sixty one percent say it is mildly exaggerated how many believe it is greatly exaggerated"?,"if fifty eight percent of the sixty one percent say that they believe the effect on the body to be around six months,how many believe it to be seven to eight months"?,concatenated"if"+"a"+"poll"+"found"+"that"+"sixty-eight"+"percent"+"of"+"republicans"+"believe"+"that"+"ivermectin"+"is"+"a"+"safe"+"covid"+"treatment"+"what"+"is"+"the"+"percent"+"who"+"oppose"?,"if"+"the"+"margin"+"of"+"error"+"is"+"six"+"and" +"fifty-five hundreths"+"percent"+"what"+"is"+"the"+"range"?,"out"+"of"+"the"+"thirty-two"+"percent"+"who"+"oppose"+"ivermectin"+"eighty-nine"+"percent"+"strongly"+"oppose"+"it"+"being"+"touted"+"as"+"a"+"cure"+"how"+"many"+"mildy"+"oppose"?]
public static main(string []args)
int number
number=number*2
system.out print in (“the number is“ +number)
<subheading.html>
polling problems
math problems that involve the use of polls
polling function (exact,number)
console log (exact:${exact},number:${number},
if polling function log== (exact,number)
return true
else:
return false
if polling function log==(number,exact)
return false
else:
return true  
for math problems in covid strings math problem list 
if math problem==polling percent:
subtract exact from 100
else:
remain 
if math problem==margin of error:
add and subtract exact number 
else:
remain 
<header.html>
sentences
covid related sentences that will appear in covid strings8
covidstringssentencelisteight=["covid is so unpopular it wouldnt be anybodys third party spoiler","covid is a thousandth as old as the pythagorean theorem","its crazy that eleven percent of republicans mildly oppose ivermectin","covid"+"is"+"no"+"exception"+"to"+"the"+"rule"+"that"+"sleep"+"helps"+"strengthen"+"your"+"immune"+"system","covid"+"is"+"something"+"you"+"dont"+"want"+"natural"+"immunity"+"from"]
<header.html>
game code part2
the rest of the game code excluding answer and winner checker includes bonus question
string.split   
arrays.aslist(list<string>)
for (string ss:arr)
system.outprintin(ss)
java util.scanner
java.util
questions[]questions={
collections.shuffle(arrays.aslist(questions)
public static main(string []args)
int number
number=number*2
system.out print in (“the number is“ +number)
<subheading.html>
bonus question
the extra question or questions that appear around the end of the game
question.bonusone= (would the meaning of the sentence change "covid is no exception to the rule that sleep helps strengthen your immune system if immune system was replaced with engine shaft")
userin.select team
import meta.
class myclass
constructor(non-concatenated)
return category
if category==math problem:
prompt
log
else:
select from multiple choice
if category=multiple choice:
select from multiple choice 
else:
prompt
log
myclass=new.myclass(concatenated)
return category
if category==math problem:
prompt
log
else:
select from multiple choice
if category=multiple choice:
select from multiple choice 
else:
prompt
log
import syntax 
substring(start,end)
<header.html>
answer checker
the feature within covid strings that allows the software to check whether a users answer is correct
for multiple choice questions in covid strings 
if selectedanswer==correct answer:
return true
else:
return false
for math problems in covid strings
if typed answer ==correct
return true
else:
return false
if typed answer==not correct
return false
else
return true
public static main(string []args)
int number
number=number*2
system.out print in (“the number is“ +number)
<subheading.html>
answer scanner
the feature within the covid strings answer checker that allows for confirmation of the user 
if selectedanswer==correct answer:
return true
else:
return false
answer checker
scanner=new scanner(system.in)
string correct answer
string useranswer=scanner.nextline()
if useranswer.equals(correctanswer)
system.out.print.in(correct)
else:
system.out.printin(incorrect)
scanner.close
<header.html>
winner checker
the feature within covid strings that allows for the player to know if their team won 
check winner:
if winner==true:
log(the winner is)
if winner==false:
log(no winner yet) 
if users team wins covid strings8 
console log users team wins covid strings8
else
remain
if users team loses covid strings8
return game over
else
remain
return filename
